{"ast":null,"code":"import _slicedToArray from \"/Users/edward/Desktop/Turkey_Timer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/edward/Desktop/Turkey_Timer/src/credits/credits.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Crawl from \"react-star-wars-crawl\";\nimport \"./credits.css\"; // Import the necessary styles, or include them another way with your build process\n\nimport \"react-star-wars-crawl/lib/index.css\";\n\nconst useAudio = url => {\n  const _useState = useState(new Audio(url)),\n        _useState2 = _slicedToArray(_useState, 1),\n        audio = _useState2[0];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        playing = _useState4[0],\n        setPlaying = _useState4[1];\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  }, [audio, playing]);\n  return [playing, toggle];\n};\n\nconst Credits = ({\n  url\n}) => {\n  //console.log(url)\n  const _useAudio = useAudio(url),\n        _useAudio2 = _slicedToArray(_useAudio, 2),\n        playing = _useAudio2[0],\n        toggle = _useAudio2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    id: \"Margin\",\n    className: \"centerdiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"Style\",\n    className: \"buttonstyle\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, playing ? \"ðŸ”‡\" : \"ðŸ”‰\")), React.createElement(Crawl, {\n    title: \"Yoder: Intergalactic Dating\",\n    subTitle: \"A New Challenge\",\n    text: \"It is a period of intense learning. React error messages, CSS hell, Javascript scope issues. Front-end web frameworks have won victories against us, technically, socially and emotionally. But we do not despair! After 5 weeks of learning we embarked on a new challenge: Create the best dating app using the Star Wars API in 24 hours. So with love, we present to you - Yoder: Intergalactic Dating, which was developed in one day only by yours truly: Matilde Ribeiro, Carolina Viero and Edward Watson. May the force be with you.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nexport default Credits;","map":{"version":3,"sources":["/Users/edward/Desktop/Turkey_Timer/src/credits/credits.js"],"names":["React","useState","useEffect","Crawl","useAudio","url","Audio","audio","playing","setPlaying","toggle","play","pause","Credits"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAO,eAAP,C,CAEA;;AACA,OAAO,qCAAP;;AAEA,MAAMC,QAAQ,GAAGC,GAAG,IAAI;AAAA,oBACNJ,QAAQ,CAAC,IAAIK,KAAJ,CAAUD,GAAV,CAAD,CADF;AAAA;AAAA,QACfE,KADe;;AAAA,qBAEQN,QAAQ,CAAC,KAAD,CAFhB;AAAA;AAAA,QAEfO,OAFe;AAAA,QAENC,UAFM;;AAItB,QAAMC,MAAM,GAAG,MAAMD,UAAU,CAAC,CAACD,OAAF,CAA/B;;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,GAAGD,KAAK,CAACI,IAAN,EAAH,GAAkBJ,KAAK,CAACK,KAAN,EAAzB;AACD,GAFQ,EAEN,CAACL,KAAD,EAAQC,OAAR,CAFM,CAAT;AAIA,SAAO,CAACA,OAAD,EAAUE,MAAV,CAAP;AACD,CAXD;;AAaA,MAAMG,OAAO,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAa;AAC3B;AAD2B,oBAEDD,QAAQ,CAACC,GAAD,CAFP;AAAA;AAAA,QAEpBG,OAFoB;AAAA,QAEXE,MAFW;;AAI3B,SACE,0CACE;AAAK,IAAA,EAAE,EAAC,QAAR;AAAiB,IAAA,SAAS,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,EAAE,EAAC,OAAX;AAAmB,IAAA,SAAS,EAAC,aAA7B;AAA2C,IAAA,OAAO,EAAEA,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,GAAG,IAAH,GAAU,IADpB,CADF,CADF,EAME,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,6BADR;AAEE,IAAA,QAAQ,EAAC,iBAFX;AAGE,IAAA,IAAI,EAAC,+gBAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAcD,CAlBD;;AAoBA,eAAeK,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Crawl from \"react-star-wars-crawl\";\nimport \"./credits.css\";\n\n// Import the necessary styles, or include them another way with your build process\nimport \"react-star-wars-crawl/lib/index.css\";\n\nconst useAudio = url => {\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  }, [audio, playing]);\n\n  return [playing, toggle];\n};\n\nconst Credits = ({ url }) => {\n  //console.log(url)\n  const [playing, toggle] = useAudio(url);\n\n  return (\n    <>\n      <div id=\"Margin\" className=\"centerdiv\">\n        <button id=\"Style\" className=\"buttonstyle\" onClick={toggle}>\n          {playing ? \"ðŸ”‡\" : \"ðŸ”‰\"}\n        </button>\n      </div>\n      <Crawl\n        title=\"Yoder: Intergalactic Dating\"\n        subTitle=\"A New Challenge\"\n        text=\"It is a period of intense learning. React error messages, CSS hell, Javascript scope issues. Front-end web frameworks have won victories against us, technically, socially and emotionally. But we do not despair! After 5 weeks of learning we embarked on a new challenge: Create the best dating app using the Star Wars API in 24 hours. So with love, we present to you - Yoder: Intergalactic Dating, which was developed in one day only by yours truly: Matilde Ribeiro, Carolina Viero and Edward Watson. May the force be with you.\"\n      />\n    </>\n  );\n};\n\nexport default Credits;\n"]},"metadata":{},"sourceType":"module"}