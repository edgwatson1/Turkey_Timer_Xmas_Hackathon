{"ast":null,"code":"var _jsxFileName = \"/Users/edward/Desktop/Turkey_Timer/src/result/Result.js\";\nimport React from \"react\";\nimport \"./Result.css\";\nimport Button from \"../auxiliaries/button\";\nimport { Switch, Route, withRouter, Link } from \"react-router-dom\";\nimport PositiveResult from \"./PositiveResult.js\";\nimport Undercooked from \"./Undercooked.js\";\nimport Overcooked from \"./Overcooked.js\";\n\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const between = (min, max) => {\n      return this.props.currentTime >= this.props.targetCookingTime - min * this.props.targetCookingTime && this.props.currentTime <= this.props.targetCookingTime + max * this.props.targetCookingTime;\n    };\n\n    if (between(0.05, 0.05)) {\n      return React.createElement(React.Fragment, null, React.createElement(PositiveResult, {\n        incrementStreak: this.props.incrementStreak,\n        streak: this.props.streak,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    } else if (this.props.currentTime < this.props.targetCookingTime * 0.95) {\n      return React.createElement(React.Fragment, null, React.createElement(Undercooked, {\n        streak: this.props.streak,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(React.Fragment, null, React.createElement(Overcooked, {\n        streak: this.props.streak,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default Result;","map":{"version":3,"sources":["/Users/edward/Desktop/Turkey_Timer/src/result/Result.js"],"names":["React","Button","Switch","Route","withRouter","Link","PositiveResult","Undercooked","Overcooked","Result","Component","constructor","props","render","between","min","max","currentTime","targetCookingTime","incrementStreak","streak"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,EAAoCC,IAApC,QAAgD,kBAAhD;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;AAEA,MAAMC,MAAN,SAAqBT,KAAK,CAACU,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5B,aACE,KAAKJ,KAAL,CAAWK,WAAX,IACE,KAAKL,KAAL,CAAWM,iBAAX,GAA+BH,GAAG,GAAG,KAAKH,KAAL,CAAWM,iBADlD,IAEA,KAAKN,KAAL,CAAWK,WAAX,IACE,KAAKL,KAAL,CAAWM,iBAAX,GAA+BF,GAAG,GAAG,KAAKJ,KAAL,CAAWM,iBAJpD;AAMD,KAPD;;AAQA,QAAIJ,OAAO,CAAC,IAAD,EAAO,IAAP,CAAX,EAAyB;AACvB,aACE,0CACE,oBAAC,cAAD;AACE,QAAA,eAAe,EAAE,KAAKF,KAAL,CAAWO,eAD9B;AAEE,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,MAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQD,KATD,MASO,IAAI,KAAKR,KAAL,CAAWK,WAAX,GAAyB,KAAKL,KAAL,CAAWM,iBAAX,GAA+B,IAA5D,EAAkE;AACvE,aACE,0CACE,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAKN,KAAL,CAAWQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KANM,MAMA;AACL,aACE,0CACE,oBAAC,UAAD;AAAY,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWQ,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;AACF;;AApCkC;;AAuCrC,eAAeX,MAAf","sourcesContent":["import React from \"react\";\nimport \"./Result.css\";\nimport Button from \"../auxiliaries/button\";\nimport { Switch, Route, withRouter, Link } from \"react-router-dom\";\nimport PositiveResult from \"./PositiveResult.js\";\nimport Undercooked from \"./Undercooked.js\";\nimport Overcooked from \"./Overcooked.js\";\n\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const between = (min, max) => {\n      return (\n        this.props.currentTime >=\n          this.props.targetCookingTime - min * this.props.targetCookingTime &&\n        this.props.currentTime <=\n          this.props.targetCookingTime + max * this.props.targetCookingTime\n      );\n    };\n    if (between(0.05, 0.05)) {\n      return (\n        <>\n          <PositiveResult\n            incrementStreak={this.props.incrementStreak}\n            streak={this.props.streak}\n          />\n        </>\n      );\n    } else if (this.props.currentTime < this.props.targetCookingTime * 0.95) {\n      return (\n        <>\n          <Undercooked streak={this.props.streak} />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Overcooked streak={this.props.streak} />\n        </>\n      );\n    }\n  }\n}\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}