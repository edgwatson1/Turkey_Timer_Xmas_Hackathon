{"ast":null,"code":"var _jsxFileName = \"/Users/edward/Desktop/Turkey_Timer/src/turkeyweigh/turkeyweigh.js\";\nimport React from \"react\";\nimport \"./turkeyweigh.css\";\nimport Button from \"../auxiliaries/button\";\nimport { Switch, Route, withRouter, Link } from \"react-router-dom\";\nimport { thisExpression } from \"@babel/types\";\n\nclass TurkeyWeigh extends React.Component {\n  constructor(props) {\n    super(props);\n    this.convertMinsToHrsMins = this.convertMinsToHrsMins.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.defineTurkeyWeight();\n    this.props.resetTimer();\n  }\n\n  render() {\n    function convertMinsToHrsMins(mins) {\n      let h = Math.floor(mins / 60);\n      let m = mins % 60;\n      h = h < 10 ? \"0\" + h : h;\n      m = m < 10 ? \"0\" + m : m;\n      return \"\".concat(h, \":\").concat(m);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Let's weigh your turkey. \\u2696\\uFE0F\"), React.createElement(\"div\", {\n      id: \"turkeyimage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://res.cloudinary.com/edwardwatson/image/upload/v1574856908/TurkeyTimer/scalesturkey_lucqlb.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Your turkey weighs...\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.props.weight, \" kg\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Target cooking time:\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.convertMinsToHrsMins(this.props.targetCookingTime), \" Minutes\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"At 180\\xBAC, Gas Mark 4\"), React.createElement(Link, {\n      to: \"/oven\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Button, {\n      message: \"Put it in the oven!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" \"));\n  }\n\n}\n\nexport default TurkeyWeigh;","map":{"version":3,"sources":["/Users/edward/Desktop/Turkey_Timer/src/turkeyweigh/turkeyweigh.js"],"names":["React","Button","Switch","Route","withRouter","Link","thisExpression","TurkeyWeigh","Component","constructor","props","convertMinsToHrsMins","bind","componentDidMount","defineTurkeyWeight","resetTimer","render","mins","h","Math","floor","m","weight","targetCookingTime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,EAAoCC,IAApC,QAAgD,kBAAhD;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAEA,MAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWI,kBAAX;AACA,SAAKJ,KAAL,CAAWK,UAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,aAASL,oBAAT,CAA8BM,IAA9B,EAAoC;AAClC,UAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAAR;AACA,UAAII,CAAC,GAAGJ,IAAI,GAAG,EAAf;AACAC,MAAAA,CAAC,GAAGA,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAAvB;AACAG,MAAAA,CAAC,GAAGA,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAAvB;AACA,uBAAUH,CAAV,cAAeG,CAAf;AACD;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,EAEE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAC,sGAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKX,KAAL,CAAWY,MAAhB,QANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,oBAAL,CAA0B,KAAKD,KAAL,CAAWa,iBAArC,CADH,aARF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAXF,EAYE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAZF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAfF,CADF;AAmBD;;AAxCuC;;AA2C1C,eAAehB,WAAf","sourcesContent":["import React from \"react\";\nimport \"./turkeyweigh.css\";\nimport Button from \"../auxiliaries/button\";\nimport { Switch, Route, withRouter, Link } from \"react-router-dom\";\nimport { thisExpression } from \"@babel/types\";\n\nclass TurkeyWeigh extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.convertMinsToHrsMins = this.convertMinsToHrsMins.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.defineTurkeyWeight();\n    this.props.resetTimer();\n  }\n\n  render() {\n    function convertMinsToHrsMins(mins) {\n      let h = Math.floor(mins / 60);\n      let m = mins % 60;\n      h = h < 10 ? \"0\" + h : h;\n      m = m < 10 ? \"0\" + m : m;\n      return `${h}:${m}`;\n    }\n\n    return (\n      <div className=\"container\">\n        <h1>Let's weigh your turkey. ⚖️</h1>\n        <div id=\"turkeyimage\">\n          <img src=\"https://res.cloudinary.com/edwardwatson/image/upload/v1574856908/TurkeyTimer/scalesturkey_lucqlb.png\"></img>\n        </div>\n        <h2>Your turkey weighs...</h2>\n        <h3>{this.props.weight} kg</h3>\n        <h2>Target cooking time:</h2>\n        <h3>\n          {this.convertMinsToHrsMins(this.props.targetCookingTime)} Minutes\n        </h3>\n        <p>At 180ºC, Gas Mark 4</p>\n        <Link to=\"/oven\">\n          <Button message=\"Put it in the oven!\" />\n        </Link>\n        <p> </p>\n      </div>\n    );\n  }\n}\n\nexport default TurkeyWeigh;\n"]},"metadata":{},"sourceType":"module"}